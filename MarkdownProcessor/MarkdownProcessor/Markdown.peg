@namespace MarkdownProcessor
@classname MarkdownParser
@using MarkdownProcessor.Nodes

start <List<Node>>
	= value:document EOF {value}

document <List<Node>>
	= (docPiece / paragraph / linebreak)*

docPiece <Node>
	= heading

paragraph <Node>
	= value:(paraHelper+) { new ParagraphNode(FlattenList(value))}

paraHelper <List<ContentNode>>
	= !docPiece value:(content+) newline? {value}

linebreak <Node>
	= ("\n\r" / "\r\n" / '\r' / '\n')

heading <Node>
	= atxHeading / setextHeading

atxHeading <Node>
	= headingMatchSymbol+ spaces (!('#') content)* '#'* newlines?

headingMatchSymbol <string>
	= '#'

setextHeading <Node>
	= content* newline setextBottom newline

setextBottom <char>
	= '=' spaces '=' spaces (spaces '=')* / '-' spaces '-' spaces (spaces '-')*

spaces <string>
	=	' '* {""}

newlines <string>
	= newline+ {""}

newline <string>
	= linebreak {""}

content <ContentNode>
	= bold / italic / link / plain

link <ContentNode>
	= '[' (!']' anyChar)+ "](" (!')' anyChar)* ')'

italic <ContentNode>
	= '*' (!'*' plain / bold / italic)+ '*' / '_' (!'_' plain / bold / italic)+ '_'

bold <ContentNode>
	= "**" (!'*' plain / italic / bold)+ "**" / "__" (!'_' plain / italic / bold)+ "__"

plain <ContentNode>
	= anyChar;

EOF
  = !.
  / unexpected:. #ERROR{ "Unexpected character '" + unexpected + "'." }

any <string>
	= ['\u0000'..'\uFFFF']

	
anyChar <string>
	= !('\n' / '\r') any;